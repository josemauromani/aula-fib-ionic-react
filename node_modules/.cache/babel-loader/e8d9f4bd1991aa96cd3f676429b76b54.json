{"ast":null,"code":"var _jsxFileName = \"/home/mani/projetos/hybrid-fib/src/components/NameSetter.tsx\";\nimport React, { useRef, useState } from 'react';\nimport { IonText, IonInput, IonButton } from '@ionic/react';\n\nconst NameSetter = ({\n  initialValue,\n  placeholder,\n  buttonTitle,\n  onNameSet\n}) => {\n  const inputRef = useRef(null);\n  const [title, setTitle] = useState(initialValue);\n  return React.createElement(\"div\", {\n    style: {\n      marginTop: '10px',\n      border: 'solid 1px black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(IonText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, title), React.createElement(IonInput, {\n    ref: inputRef,\n    type: \"text\",\n    placeholder: placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(IonButton, {\n    onClick: () => {\n      setTitle(inputRef.current.value || '');\n\n      if (onNameSet) {\n        onNameSet(inputRef.current.value || '');\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, buttonTitle));\n};\n\nexport default NameSetter;","map":{"version":3,"sources":["/home/mani/projetos/hybrid-fib/src/components/NameSetter.tsx"],"names":["React","useRef","useState","IonText","IonInput","IonButton","NameSetter","initialValue","placeholder","buttonTitle","onNameSet","inputRef","title","setTitle","marginTop","border","current","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,SAA5B,QAA6C,cAA7C;;AASA,MAAMC,UAAqC,GAAG,CAAC;AAC3CC,EAAAA,YAD2C;AAC7BC,EAAAA,WAD6B;AAChBC,EAAAA,WADgB;AACHC,EAAAA;AADG,CAAD,KAEvB;AACnB,QAAMC,QAAQ,GAAGV,MAAM,CAAsB,IAAtB,CAAvB;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACK,YAAD,CAAlC;AAEA,SAAO;AAAK,IAAA,KAAK,EAAE;AACfO,MAAAA,SAAS,EAAE,MADI;AAEfC,MAAAA,MAAM,EAAE;AAFO,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIH,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUH,KAAV,CAJG,EAKH,oBAAC,QAAD;AACE,IAAA,GAAG,EAAED,QADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAEH,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALG,EAUH,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE,MAAM;AACxBK,MAAAA,QAAQ,CAACF,QAAQ,CAACK,OAAT,CAAkBC,KAAlB,IAA2B,EAA5B,CAAR;;AACA,UAAIP,SAAJ,EAAe;AACXA,QAAAA,SAAS,CAACC,QAAQ,CAACK,OAAT,CAAkBC,KAAlB,IAA2B,EAA5B,CAAT;AACH;AACF,KALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKIR,WALJ,CAVG,CAAP;AAiBH,CAvBD;;AAyBA,eAAeH,UAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { IonText, IonInput, IonButton } from '@ionic/react'\n\nexport type NameSetterProps = {\n    initialValue: string\n    placeholder: string\n    buttonTitle: string\n    onNameSet?: (name: string) => void\n}\n\nconst NameSetter: React.FC<NameSetterProps> = ({\n    initialValue, placeholder, buttonTitle, onNameSet\n}: NameSetterProps) => {\n    const inputRef = useRef<HTMLIonInputElement>(null)\n    const [title, setTitle] = useState(initialValue)\n\n    return <div style={{\n        marginTop: '10px',\n        border: 'solid 1px black'\n    }}>\n        <IonText>{title}</IonText>\n        <IonInput\n          ref={inputRef}\n          type=\"text\"\n          placeholder={placeholder}\n        />\n        <IonButton onClick={() => {\n          setTitle(inputRef.current!.value || '')\n          if (onNameSet) {\n              onNameSet(inputRef.current!.value || '')\n          }\n        }}>{buttonTitle}</IonButton>\n    </div>\n}\n\nexport default NameSetter"]},"metadata":{},"sourceType":"module"}