{"ast":null,"code":"var _jsxFileName = \"/home/mani/projetos/hybrid-fib/src/components/NameList.tsx\";\nimport React, { useState } from 'react';\nimport { IonList, IonItem, IonLabel, IonAlert } from '@ionic/react';\n\nconst NameList = ({\n  names,\n  onDelete\n}) => {\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [alertVisible, setAlertVisible] = useState(false);\n  return React.createElement(React.Fragment, null, React.createElement(IonList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, names.map((name, index) => {\n    return React.createElement(IonItem, {\n      button: true,\n      onClick: () => {\n        setSelectedIndex(index);\n        setAlertVisible(true);\n      },\n      key: `NameList_${name}_${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, name));\n  })), React.createElement(IonAlert, {\n    isOpen: alertVisible,\n    onDidDismiss: () => setAlertVisible(false),\n    header: \"Confirmar\",\n    message: \"Deseja mesmo remover esse nome?\",\n    buttons: [\"Não\", {\n      text: \"Sim\",\n      handler: () => {\n        onDelete(selectedIndex);\n      }\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nexport default NameList;","map":{"version":3,"sources":["/home/mani/projetos/hybrid-fib/src/components/NameList.tsx"],"names":["React","useState","IonList","IonItem","IonLabel","IonAlert","NameList","names","onDelete","selectedIndex","setSelectedIndex","alertVisible","setAlertVisible","map","name","index","text","handler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,cAArD;;AAOA,MAAMC,QAAiC,GAAG,CAAC;AACvCC,EAAAA,KADuC;AAChCC,EAAAA;AADgC,CAAD,KAEpC;AACF,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,CAAC,CAAF,CAAlD;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;AACA,SACI,0CACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,WACI,oBAAC,OAAD;AACI,MAAA,MAAM,MADV;AAEI,MAAA,OAAO,EAAE,MAAM;AACXL,QAAAA,gBAAgB,CAACK,KAAD,CAAhB;AACAH,QAAAA,eAAe,CAAC,IAAD,CAAf;AACH,OALL;AAMI,MAAA,GAAG,EAAG,YAAWE,IAAK,IAAGC,KAAM,EANnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWD,IAAX,CARJ,CADJ;AAYH,GAbA,CADL,CADJ,EAiBI,oBAAC,QAAD;AACI,IAAA,MAAM,EAAEH,YADZ;AAEI,IAAA,YAAY,EAAE,MAAMC,eAAe,CAAC,KAAD,CAFvC;AAGI,IAAA,MAAM,EAAC,WAHX;AAII,IAAA,OAAO,EAAC,iCAJZ;AAKI,IAAA,OAAO,EAAE,CACL,KADK,EAEL;AACII,MAAAA,IAAI,EAAE,KADV;AAEIC,MAAAA,OAAO,EAAE,MAAM;AACXT,QAAAA,QAAQ,CAACC,aAAD,CAAR;AACH;AAJL,KAFK,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,CADJ;AAmCH,CAxCD;;AA0CA,eAAeH,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport { IonList, IonItem, IonLabel, IonAlert } from '@ionic/react'\n\ntype NameListProps = {\n    names: string[]\n    onDelete: (at: number) => void\n}\n\nconst NameList: React.FC<NameListProps> = ({\n    names, onDelete\n}) => {\n    const [selectedIndex, setSelectedIndex] = useState(-1)\n    const [alertVisible, setAlertVisible] = useState(false)\n    return(\n        <>\n            <IonList>\n                {names.map((name, index) => {\n                    return (\n                        <IonItem \n                            button\n                            onClick={() => {\n                                setSelectedIndex(index)\n                                setAlertVisible(true)\n                            }}\n                            key={`NameList_${name}_${index}`}\n                            >\n                            <IonLabel>{name}</IonLabel>\n                        </IonItem>\n                    )\n                })}\n            </IonList>\n            <IonAlert\n                isOpen={alertVisible}\n                onDidDismiss={() => setAlertVisible(false)}\n                header=\"Confirmar\"\n                message=\"Deseja mesmo remover esse nome?\"\n                buttons={[\n                    \"Não\",\n                    { \n                        text: \"Sim\",\n                        handler: () => {\n                            onDelete(selectedIndex)\n                        }\n                    }\n                ]}\n                />\n        </>\n    )\n}\n\nexport default NameList"]},"metadata":{},"sourceType":"module"}