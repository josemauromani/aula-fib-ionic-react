{"ast":null,"code":"var _jsxFileName = \"/home/mani/projetos/hybrid-fib/src/contexts/AppContext.tsx\";\nimport React, { useReducer, useEffect } from \"react\";\nimport { Plugins } from \"@capacitor/core\";\nconst {\n  Storage\n} = Plugins;\nconst DEFAULT_APPDATA = {\n  names: []\n};\nexport const AppContext = React.createContext([DEFAULT_APPDATA, () => {}]);\nexport const AppContextProvider = ({\n  children\n}) => {\n  const reducer = useReducer((state, {\n    action\n  }) => {\n    switch (action.type) {\n      case \"add\":\n        {\n          const newState = { ...state,\n            names: [action.nameToInsert, ...state.names]\n          };\n          Storage.set({\n            key: \"appContext\",\n            value: JSON.stringify(newState)\n          }).catch(() => {});\n          return newState;\n        }\n\n      case \"delete\":\n        {\n          const newNames = [...state.names];\n          newNames.splice(action.indexToDelete, 1);\n          const newState = { ...state,\n            names: newNames\n          };\n          Storage.set({\n            key: \"appContext\",\n            value: JSON.stringify(newState)\n          }).catch(() => {});\n          return newState;\n        }\n\n      case \"initialize\":\n        return action.state;\n\n      case \"update\":\n        const newNames = [...state.names];\n        newNames[action.at] = action.to;\n        const newState = { ...state,\n          names: newNames\n        };\n        Storage.set({\n          key: \"appContext\",\n          value: JSON.stringify(newState)\n        }).catch(() => {});\n        return newState;\n    }\n  }, DEFAULT_APPDATA);\n  useEffect(() => {\n    Storage.get({\n      key: \"appContext\"\n    }).then(value => {\n      if (!value.value) {\n        return;\n      }\n\n      const state = JSON.parse(value.value);\n      reducer[1]({\n        action: {\n          type: \"initialize\",\n          state: state\n        }\n      });\n    }).catch(() => {});\n  }, []);\n  return React.createElement(AppContext.Provider, {\n    value: reducer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/home/mani/projetos/hybrid-fib/src/contexts/AppContext.tsx"],"names":["React","useReducer","useEffect","Plugins","Storage","DEFAULT_APPDATA","names","AppContext","createContext","AppContextProvider","children","reducer","state","action","type","newState","nameToInsert","set","key","value","JSON","stringify","catch","newNames","splice","indexToDelete","at","to","get","then","parse"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport { Plugins } from \"@capacitor/core\";\nconst { Storage } = Plugins;\n\nexport interface AppData {\n  names: string[];\n}\n\nconst DEFAULT_APPDATA: AppData = {\n  names: []\n};\n\nexport interface AppDataAction {\n  action:\n    | { type: \"add\"; nameToInsert: string }\n    | { type: \"delete\"; indexToDelete: number }\n    | { type: \"initialize\"; state: AppData }\n    | { type: \"update\"; at: number; to: string };\n}\n\nexport const AppContext = React.createContext<\n  [AppData, React.Dispatch<AppDataAction>]\n>([DEFAULT_APPDATA, () => {}]);\n\nexport const AppContextProvider: React.FC<React.PropsWithChildren<{}>> = ({\n  children\n}: React.PropsWithChildren<{}>) => {\n  const reducer = useReducer(\n    (state: AppData, { action }: AppDataAction): AppData => {\n      switch (action.type) {\n        case \"add\": {\n          const newState = {\n            ...state,\n            names: [action.nameToInsert, ...state.names]\n          };\n          Storage.set({\n            key: \"appContext\",\n            value: JSON.stringify(newState)\n          }).catch(() => {});\n          return newState;\n        }\n        case \"delete\": {\n          const newNames = [...state.names];\n          newNames.splice(action.indexToDelete, 1);\n          const newState = {\n            ...state,\n            names: newNames\n          };\n          Storage.set({\n            key: \"appContext\",\n            value: JSON.stringify(newState)\n          }).catch(() => {});\n          return newState;\n        }\n        case \"initialize\":\n          return action.state;\n        case \"update\":\n          const newNames = [...state.names];\n          newNames[action.at] = action.to;\n          const newState = {\n            ...state,\n            names: newNames\n          };\n          Storage.set({\n            key: \"appContext\",\n            value: JSON.stringify(newState)\n          }).catch(() => {});\n          return newState;\n      }\n    },\n    DEFAULT_APPDATA\n  );\n\n  useEffect(() => {\n    Storage.get({ key: \"appContext\" })\n      .then(value => {\n        if (!value.value) {\n          return;\n        }\n\n        const state: AppData = JSON.parse(value.value);\n        reducer[1]({\n          action: { type: \"initialize\", state: state }\n        });\n      })\n      .catch(() => {});\n  }, []);\n\n  return <AppContext.Provider value={reducer}>{children}</AppContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}