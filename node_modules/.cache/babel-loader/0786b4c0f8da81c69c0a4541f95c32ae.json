{"ast":null,"code":"import _toConsumableArray from\"/home/mani/projetos/hybrid-fib/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/mani/projetos/hybrid-fib/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useReducer,useEffect}from\"react\";import{Plugins}from\"@capacitor/core\";var Storage=Plugins.Storage;var DEFAULT_APPDATA={names:[]};export var AppContext=React.createContext([DEFAULT_APPDATA,function(){}]);export var AppContextProvider=function AppContextProvider(_ref){var children=_ref.children;var reducer=useReducer(function(state,_ref2){var action=_ref2.action;switch(action.type){case\"add\":{var _newState=_objectSpread({},state,{names:[action.nameToInsert].concat(_toConsumableArray(state.names))});Storage.set({key:\"appContext\",value:JSON.stringify(_newState)}).catch(function(){});return _newState;}case\"delete\":{var _newNames=_toConsumableArray(state.names);_newNames.splice(action.indexToDelete,1);var _newState2=_objectSpread({},state,{names:_newNames});Storage.set({key:\"appContext\",value:JSON.stringify(_newState2)}).catch(function(){});return _newState2;}case\"initialize\":return action.state;case\"update\":var newNames=_toConsumableArray(state.names);newNames[action.at]=action.to;var newState=_objectSpread({},state,{names:newNames});Storage.set({key:\"appContext\",value:JSON.stringify(newState)}).catch(function(){});return newState;}},DEFAULT_APPDATA);useEffect(function(){Storage.get({key:\"appContext\"}).then(function(value){if(!value.value){return;}var state=JSON.parse(value.value);reducer[1]({action:{type:\"initialize\",state:state}});}).catch(function(){});},[]);return React.createElement(AppContext.Provider,{value:reducer},children);};","map":{"version":3,"sources":["/home/mani/projetos/hybrid-fib/src/contexts/AppContext.tsx"],"names":["React","useReducer","useEffect","Plugins","Storage","DEFAULT_APPDATA","names","AppContext","createContext","AppContextProvider","children","reducer","state","action","type","newState","nameToInsert","set","key","value","JSON","stringify","catch","newNames","splice","indexToDelete","at","to","get","then","parse"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport { Plugins } from \"@capacitor/core\";\nconst { Storage } = Plugins;\n\nexport interface AppData {\n  names: string[];\n}\n\nconst DEFAULT_APPDATA: AppData = {\n  names: []\n};\n\nexport interface AppDataAction {\n  action:\n    | { type: \"add\"; nameToInsert: string }\n    | { type: \"delete\"; indexToDelete: number }\n    | { type: \"initialize\"; state: AppData }\n    | { type: \"update\"; at: number; to: string };\n}\n\nexport const AppContext = React.createContext<\n  [AppData, React.Dispatch<AppDataAction>]\n>([DEFAULT_APPDATA, () => {}]);\n\nexport const AppContextProvider: React.FC<React.PropsWithChildren<{}>> = ({\n  children\n}: React.PropsWithChildren<{}>) => {\n  const reducer = useReducer(\n    (state: AppData, { action }: AppDataAction): AppData => {\n      switch (action.type) {\n        case \"add\": {\n          const newState = {\n            ...state,\n            names: [action.nameToInsert, ...state.names]\n          };\n          Storage.set({\n            key: \"appContext\",\n            value: JSON.stringify(newState)\n          }).catch(() => {});\n          return newState;\n        }\n        case \"delete\": {\n          const newNames = [...state.names];\n          newNames.splice(action.indexToDelete, 1);\n          const newState = {\n            ...state,\n            names: newNames\n          };\n          Storage.set({\n            key: \"appContext\",\n            value: JSON.stringify(newState)\n          }).catch(() => {});\n          return newState;\n        }\n        case \"initialize\":\n          return action.state;\n        case \"update\":\n          const newNames = [...state.names];\n          newNames[action.at] = action.to;\n          const newState = {\n            ...state,\n            names: newNames\n          };\n          Storage.set({\n            key: \"appContext\",\n            value: JSON.stringify(newState)\n          }).catch(() => {});\n          return newState;\n      }\n    },\n    DEFAULT_APPDATA\n  );\n\n  useEffect(() => {\n    Storage.get({ key: \"appContext\" })\n      .then(value => {\n        if (!value.value) {\n          return;\n        }\n\n        const state: AppData = JSON.parse(value.value);\n        reducer[1]({\n          action: { type: \"initialize\", state: state }\n        });\n      })\n      .catch(() => {});\n  }, []);\n\n  return <AppContext.Provider value={reducer}>{children}</AppContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}