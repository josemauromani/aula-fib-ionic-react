{"ast":null,"code":"var _jsxFileName = \"/home/mani/projetos/hybrid-fib/src/pages/UpdatePage.tsx\";\nimport React, { useContext } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { IonPage, IonHeader, IonTitle, IonContent, IonToolbar, IonButtons, IonBackButton } from '@ionic/react';\nimport { AppContext } from '../contexts/AppContext';\nimport NameSetter from '../components/NameSetter';\n\nconst InsertPage = () => {\n  const params = useParams();\n  const [appData, dispatchAppData] = useContext(AppContext);\n\n  if (params.idx === undefined) {\n    throw new Error('Cadê o indice');\n  }\n\n  const idx = parseInt(params.idx);\n  const initialName = appData.names[idx];\n  const history = useHistory();\n\n  const handleBack = () => history.goBack();\n\n  return React.createElement(IonPage, {\n    id: \"update\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(IonHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(IonToolbar, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(IonButtons, {\n    slot: \"start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(IonBackButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(IonTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Atualizar\"))), React.createElement(IonContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(NameSetter, {\n    initialValue: initialName,\n    placeholder: \"Mude o nome\",\n    buttonTitle: \"Atualizar\",\n    onNameSet: name => {\n      dispatchAppData({\n        action: {\n          type: 'update',\n          at: idx,\n          to: name\n        }\n      });\n      handleBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n};\n\nexport default InsertPage;","map":{"version":3,"sources":["/home/mani/projetos/hybrid-fib/src/pages/UpdatePage.tsx"],"names":["React","useContext","useHistory","useParams","IonPage","IonHeader","IonTitle","IonContent","IonToolbar","IonButtons","IonBackButton","AppContext","NameSetter","InsertPage","params","appData","dispatchAppData","idx","undefined","Error","parseInt","initialName","names","history","handleBack","goBack","name","action","type","at","to"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,QAA7B,EAAuCC,UAAvC,EAAmDC,UAAnD,EAA+DC,UAA/D,EAA2EC,aAA3E,QAAgG,cAAhG;AAEA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAKA,MAAMC,UAAoB,GAAG,MAAM;AAC/B,QAAMC,MAAoB,GAAGX,SAAS,EAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,eAAV,IAA6Bf,UAAU,CAACU,UAAD,CAA7C;;AACA,MAAIG,MAAM,CAACG,GAAP,KAAaC,SAAjB,EAA4B;AACxB,UAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;AACH;;AACD,QAAMF,GAAG,GAAGG,QAAQ,CAACN,MAAM,CAACG,GAAR,CAApB;AACA,QAAMI,WAAW,GAAGN,OAAO,CAACO,KAAR,CAAcL,GAAd,CAApB;AACA,QAAMM,OAAO,GAAGrB,UAAU,EAA1B;;AACA,QAAMsB,UAAU,GAAG,MAAMD,OAAO,CAACE,MAAR,EAAzB;;AACA,SACI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CADJ,CADJ,EASI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACI,IAAA,YAAY,EAAEJ,WADlB;AAEI,IAAA,WAAW,EAAC,aAFhB;AAGI,IAAA,WAAW,EAAC,WAHhB;AAII,IAAA,SAAS,EAAGK,IAAD,IAAU;AACjBV,MAAAA,eAAe,CAAC;AACZW,QAAAA,MAAM,EAAE;AACJC,UAAAA,IAAI,EAAE,QADF;AAEJC,UAAAA,EAAE,EAAEZ,GAFA;AAEKa,UAAAA,EAAE,EAAEJ;AAFT;AADI,OAAD,CAAf;AAMAF,MAAAA,UAAU;AACb,KAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,CADJ;AA4BH,CAtCD;;AAwCA,eAAeX,UAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { useHistory, useParams } from 'react-router'\nimport { IonPage, IonHeader, IonTitle, IonContent, IonToolbar, IonButtons, IonBackButton } from '@ionic/react'\nimport ContextualNameSetter from '../components/ContextualNameSetter'\nimport { AppContext } from '../contexts/AppContext'\nimport NameSetter from '../components/NameSetter'\n\ntype UpdateParams = {\n    idx?: string\n}\nconst InsertPage: React.FC = () => {\n    const params: UpdateParams = useParams()\n    const [appData, dispatchAppData] = useContext(AppContext)\n    if (params.idx===undefined) {\n        throw new Error('Cadê o indice')\n    }\n    const idx = parseInt(params.idx)\n    const initialName = appData.names[idx]\n    const history = useHistory()\n    const handleBack = () => history.goBack()\n    return (\n        <IonPage id=\"update\">\n            <IonHeader>\n                <IonToolbar color=\"primary\">\n                    <IonButtons slot=\"start\">\n                        <IonBackButton />\n                    </IonButtons>\n                    <IonTitle>Atualizar</IonTitle>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <NameSetter \n                    initialValue={initialName}\n                    placeholder=\"Mude o nome\"\n                    buttonTitle=\"Atualizar\"\n                    onNameSet={(name) => {\n                        dispatchAppData({\n                            action: {\n                                type: 'update',\n                                at: idx, to: name\n                            }\n                        })\n                        handleBack()\n                    }}\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\n\nexport default InsertPage"]},"metadata":{},"sourceType":"module"}